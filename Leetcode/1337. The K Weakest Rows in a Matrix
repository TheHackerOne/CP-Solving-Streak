class Solution {
private:
    static bool comp(pair<int, int> &a, pair<int, int> &b){
        if(a.first == b.first) return a.second > b.second;
        return a.first > b.first;
    }
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<pair<int, int>> arr;
        int n = mat.size(), m = mat[0].size();
        for(int i=0;i<n;i++){
            int cnt = 0;
            for(int j=0;j<m;j++){
                if(mat[i][j] == 1) cnt++;
                else break;
            }
            arr.push_back({ cnt, i });
        }
        sort(arr.begin(), arr.end(), comp);
        vector<int> res;
        n = arr.size();
        for(int i=0;i<k;i++){
            res.push_back(arr[n-i-1].second);
        }
        return res;
    }
};