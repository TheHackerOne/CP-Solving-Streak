#include<bits/stdc++.h>
using namespace std;
string psf;

void dfs(int i, int j, vector<vector<int>> &grid, string &str){
    int n = grid.size(), m = grid[0].size();
    grid[i][j] = 0;
    if(i-1>=0 && grid[i-1][j] == 1) str+='t',dfs(i-1, j, grid, str);
    if(j-1>=0 && grid[i][j-1] == 1) str+='l',dfs(i, j-1, grid, str);
    if(i+1<n && grid[i+1][j] == 1) str+='d',dfs(i+1, j, grid, str);
    if(j+1<m && grid[i][j+1] == 1) str+='r',dfs(i, j+1, grid, str);
}

int numDistinctIslands(vector<vector<int>>& arr){
    int n = arr.size(), m = arr[0].size();
    unordered_map<string, int> mp;
    int count = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] == 1){
                string str = "c";
                dfs(i, j, arr, str);
                if(mp.find(str) == mp.end()){
                    count++;
                    mp[str] = 1;
                }
            }
        }
    }
    return count;
}

int main(){
    int n,m;
    cin>>n>>m;
    
    vector<vector<int>>arr(n,vector<int>(m));
    
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            int x;
            cin>>x;
            
            arr[i][j]=x;
        }
    }
    cout<<numDistinctIslands(arr);
}