/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode *root, unordered_map<int, int> &mp, int &ans){
        if(root == nullptr ) return;
        if(root->left == nullptr && root->right == nullptr){
            int oddCount=0;
            mp[root->val]++;
            for(auto i:mp){
                if(i.second%2) oddCount++;
            }
            if(oddCount == 0 || oddCount == 1) {
                ans += 1;
            }
            mp[root->val]--;
            return;
        }
        
        mp[root->val]++;
        dfs(root->left, mp,ans);
        dfs(root->right, mp,ans);
        mp[root->val]--;
    }
    
    int pseudoPalindromicPaths (TreeNode* root) {
        unordered_map<int, int> mp;
        int ans=0;
        dfs(root, mp, ans);
        return ans;
    }
};