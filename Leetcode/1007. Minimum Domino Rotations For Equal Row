class Solution {
public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        unordered_map<int, set<int>> mp;
        
        int n = tops.size();
        
        for(int i=0;i<n;i++){
            mp[tops[i]].insert(i);
        }
        for(int i=0;i<n;i++){
            mp[bottoms[i]].insert(i);
        }
        
        bool flag = false;
        int cand = -1;
        for(auto [num, cnt]:mp){
            if(cnt.size() == n){
                cand = num;
                flag = true;
                break;
            }
        }
        
        if(!flag) return -1;
        int cnt1 = 0, cnt2 = 0;
        
        for(int i=0;i<n;i++){
            if(tops[i] == cand) cnt1++;
            if(bottoms[i] == cand) cnt2++;
        }
        
        int cnt = min({ cnt1, n-cnt1, cnt2, n-cnt2 });
        return cnt;
    }
};