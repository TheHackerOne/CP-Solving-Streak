class Solution {
public:
    void dfs(int i, int j, vector<vector<int>> &grid){
        int n = grid.size(), m = grid[0].size();
        grid[i][j] = 0;
        if(i-1>=0 && grid[i-1][j] == 1) dfs(i-1, j, grid);
        if(j-1>=0 && grid[i][j-1] == 1) dfs(i, j-1, grid);
        if(i+1<n && grid[i+1][j] == 1) dfs(i+1, j, grid);
        if(j+1<m && grid[i][j+1] == 1) dfs(i, j+1, grid);
    }
    
    int numEnclaves(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size();
        int count = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if((i == 0 || j == 0 || i == n-1 || j == m-1) && grid[i][j] == 1)
                    dfs(i, j, grid);
            }
        }
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                if(grid[i][j] == 1) count++;
            }
        }
        return count;
    }
};