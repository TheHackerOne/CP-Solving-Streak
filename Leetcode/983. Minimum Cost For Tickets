class Solution {
public:
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        vector<int> dp(365+30, 0);
        long long n = dp.size();
        
        for(long long i=0;i<n;i++){
            if(i >= days[days.size()-1]) dp[i] = 0;
            else
                dp[i] = min({costs[0], costs[1], costs[2]});
        }
        
        for(long long i=days.size()-2;i>=0;i--){
            long long day = days[i];
            for(long long j=0;j<n;j++){ // j â†’ dayCovered
                if(day > j){
                    long long op1 = costs[0]+dp[day];
                    long long op2 = costs[1]+dp[day+6];
                    long long op3 = costs[2]+dp[day+29];
                    dp[j] = min({ op1, op2, op3 });
                }
            }
        }
        
        return dp[0];
    }
};