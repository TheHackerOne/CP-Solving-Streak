/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode *root, int &md, int &node, int d){
        if(root == nullptr) return;
        
        if(d > md){
            md = d;
            node = root->val;
        }
        dfs(root->left, md, node, d+1);
        dfs(root->right,md, node,d+1);
    }
    
    int findBottomLeftValue(TreeNode* root) {
        int maxDepth = INT_MIN, node;
        dfs(root, maxDepth, node, 1);
        return node;
    }
};