class Solution {
    public:
void dfs(int node, vector<bool> &vis, vector<int> adj[]){
        vis[node] = true;
        
        for (auto x : adj[node]){
            if (vis[x] == false){
                dfs(x, vis, adj);
            }
        }
    }
    
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector<int> adj[n];
        vector<vector<int>> ans(n);
        for (auto x : edges){
            vector<int> g = x;
            adj[g[0]].push_back(g[1]);
        }
        for (int i=0 ; i<n ; i++){
            vector<bool> vis(n, false);
                dfs(i, vis, adj);
            
            //traverse the visited array
            for (int j=0 ; j<n ; j++){
                if (i == j) continue;
                if (vis[j] == true){
                    ans[j].push_back(i);
                }
            }
        }
        return ans;
    }
};