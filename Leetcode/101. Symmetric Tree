/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    bool isSymmetricHelper(TreeNode *lr, TreeNode *rr){
        // base case
        if(lr == nullptr and rr == nullptr) return true;
        if(lr == nullptr or rr == nullptr) return false;
        if(lr->val != rr->val) return false;
        
        // main logic
        bool left = isSymmetricHelper(lr->left, rr->right);
        bool right = isSymmetricHelper(lr->right, rr->left);
        return left and right;
    }
public:
    bool isSymmetric(TreeNode* root) {
        TreeNode *left = root, *right = root;
        return isSymmetricHelper(left, right);
    }
};