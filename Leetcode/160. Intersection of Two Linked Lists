/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
private:
    int getLen(ListNode *head){
        int cnt = 0;
        while(head != nullptr) {
            head = head->next;
            cnt++;
        }
        return cnt;
    }
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int len1 = getLen(headA), len2 = getLen(headB);
        ListNode *h1 = headA, *h2 = headB;
        int diff = abs(len1-len2);
        if(len1 > len2){
            while(diff--){
                h1 = h1->next;
            }
        }else if(len1 < len2){
            while(diff--){
                h2 = h2->next;
            }
        }
        while(h1 != nullptr and h2 != nullptr and h1!= h2){
            h1 = h1->next;
            h2 = h2->next;
        }
        if(h1 == nullptr and h2 == nullptr) return nullptr;
        else return h1;
    }
};