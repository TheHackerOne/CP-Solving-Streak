class Solution {
public:
    int minSwaps(vector<int>& nums) {
        int cnt = 0, n = nums.size();
        vector<int> pre(n, 0), suf(n, 0);
        for(int i=0;i<n;i++){
            if(i == 0) pre[i] = nums[i];
            else pre[i] = pre[i-1]+nums[i];
            if(nums[i] == 1){
                cnt++;
            }
        }
        if(cnt == 0) return 0;
        
        for(int i=n-1;i>=0;i--){
            if(i == n-1) suf[i] = nums[i];
            else suf[i] = suf[i+1]+nums[i];
        }
        
        int res = INT_MAX;
        
        for(int i=0;i<=n-cnt;i++){
            int swaps = pre[i+cnt-1]-(i-1>=0?pre[i-1]:0);
            res = min(res, cnt-swaps);
        }
        
        
        for(int i=1;i<cnt;i++){
            int left = i, right = cnt-left;
            int swap = pre[left-1]+suf[n-right];
            res = min(res, cnt-swap);
        }
        
        return res;
    }
};