class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head == nullptr or head->next == nullptr) return nullptr;
        ListNode *slow = head, *fast = head;
        while(fast and fast->next){
            slow = slow->next;
            fast = fast->next->next;
            if(fast == slow) break;
        }
        if(fast == slow){
            fast = head;
            while(fast != slow){
                fast = fast->next;
                slow = slow->next;
            }
            return fast;
        }
        return nullptr;
    }
};