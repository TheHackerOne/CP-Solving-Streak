class Solution {
public:
    // need cam = -1
    // have cam = 1
    // covered = 0
    int cam = 0;
    int mincamHelper(TreeNode *root){
        if(root == nullptr) return 0;
        if(root -> left == nullptr && root -> right == nullptr) return -1;
        
        
        int left = mincamHelper(root -> left);
        int right = mincamHelper(root -> right);
        
        if(left == -1 || right == -1){
            cam++;
            return 1;
        }else if(left == 1 || right == 1){
            return 0;
        }else{
            return -1;
        }
        
    }
    
    int minCameraCover(TreeNode* root) {
         int fin = mincamHelper(root);
        if(fin == -1) cam++;
        return cam;
    }
};