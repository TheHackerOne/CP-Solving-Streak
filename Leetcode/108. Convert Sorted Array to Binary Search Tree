/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    TreeNode *sortedArrayToBSTHelper(vector<int> &nums, int st, int en){
        // base case
        if(st > en) return nullptr;
        if(st == en) {
            TreeNode *newNode = new TreeNode(nums[st]);
            return newNode;
        }
        
        // main logic
        int mid = (st+en)/2;
        TreeNode *root = new TreeNode(nums[mid]);
        root->left = sortedArrayToBSTHelper(nums, st, mid-1);
        root->right = sortedArrayToBSTHelper(nums, mid+1, en);
        return root;
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return sortedArrayToBSTHelper(nums, 0, nums.size()-1);
    }
};