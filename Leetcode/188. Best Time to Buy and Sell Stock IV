class Solution {
public:
    int maxProfit(int k, vector<int>& arr) {
        int n = arr.size();
        vector<vector<vector<int>>> dp(n+1, vector<vector<int>> (2, vector<int> (k+1, 0)));
        
        for(int idx=n-1;idx>=0;idx--){
            for(int b=0;b<=1;b++){
                for(int t=0;t<k;t++){
                    if(b){
                        int res1 = arr[idx]+dp[idx+1][0][t+1];
                        int res2 = dp[idx+1][b][t];
                        dp[idx][b][t] = max(res1, res2);
                    }else{
                        int res1 = dp[idx+1][1][t]-arr[idx];
                        int res2 = dp[idx+1][0][t];
                        dp[idx][b][t] = max(res1, res2);
                    }
                }
            }
        }
        return dp[0][0][0];
    }
};