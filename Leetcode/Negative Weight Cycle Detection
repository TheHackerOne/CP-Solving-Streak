#include<bits/stdc++.h>
using namespace std;

int isNegativeWeightCycle(int n,vector<vector<int>>&edges, int m)
{
    vector<int> path(n, INT_MAX);
    path[0] = 0;

    for(int i=0;i<n-1;i++){
        for(int j=0;j<m;j++){
            int u = edges[j][0], v = edges[j][1], wt = edges[j][2];
            if(path[u] == INT_MAX) continue;
            if(path[u]+wt < path[v]){
                path[v] = path[u]+wt;
            }
        }
    }

    for(int j=0;j<m;j++){
        int u = edges[j][0], v = edges[j][1], wt = edges[j][2];
        if(path[u] == INT_MAX) continue;
        if(path[u]+wt < path[v]){
            return 1;
            path[v] = path[u]+wt;
        }
    }
    return 0;
}

int main(){
    
    int n,m;
    cin>>n>>m;

    vector<vector<int>> edges(m,vector<int>(3));
    
    for(int i=0;i<m;i++){
        int x,y,z;
        cin>>x>>y>>z;
        
        edges[i][0]=x;
        edges[i][1]=y;
        edges[i][2]=z;
        
    }
    
    cout<<isNegativeWeightCycle(n, edges, m);
}