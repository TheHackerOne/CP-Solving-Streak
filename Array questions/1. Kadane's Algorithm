https://www.codechef.com/JAN18/problems/KCON/

#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>

using namespace std;

// Kadane's Algorithm for finding max sum subarray
long long Kadane(long long *b, long long n, long long sum, long long k){
    long long dp[n];
    fill(dp, dp+n, 0);
    dp[0] = b[0];
    for(long long i=1; i<n; i++){
        dp[i] = max(b[i], b[i]+dp[i-1]);
    }
    // cout<<"max element to be returned -> "<<*max_element(dp, dp+n)<<"\n";
    return *max_element(dp, dp+n);
}

int main(){
     
    long long t;
    cin>>t;
    while(t--){
        long long n, k;
        cin>>n>>k;
        
        long long a[n], b[2*n], sum=0;
        
        for(long long i=0;i<n;i++){
            cin>>a[i];
            b[i] = a[i];
            b[n+i] = a[i];
            sum+=a[i];
        }
            
        if(k==1)
            cout<<Kadane(a, n, sum, k)<<"\n";
        else if(sum>0)
            cout<<((k-2)*sum)+Kadane(b, 2*n, sum, k)<<"\n";
        else
            cout<<Kadane(b, 2*n, sum, k)<<"\n";
    }
    return 0;
}
