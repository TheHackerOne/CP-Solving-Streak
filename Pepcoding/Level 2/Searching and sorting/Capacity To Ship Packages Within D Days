#include<bits/stdc++.h>
using namespace std;

bool ispossible(vector<int> &wt, int days, int cap){
    int d = 1;
    int capacity = 0;
    for(int i=0;i<wt.size();i++){
        if(capacity+wt[i] <= cap){
            capacity += wt[i];
        }else{
            d++;
            capacity = wt[i];
        }
    }
    if(d <= days) return true;
    return false;
}

int shipWithinDays(vector<int>& wt, int days){
    int lo = *max_element(wt.begin(), wt.end()), hi = accumulate(wt.begin(), wt.end(), 0);
    int ans = -1;

    while(lo <= hi){
        int mid = (lo+hi)/2; // max capacity per day

        if(ispossible(wt, days, mid)){
            ans = mid;
            hi = mid-1;
        }else{
            lo = mid+1;
        }
    }
    return ans;
}

int main(){
    int n;
    cin>>n;
    vector<int> wt(n,0);
    for(int i=0; i<n; i++){
        cin>>wt[i];
    }
    int days;
    cin>>days;

    int ans = shipWithinDays(wt, days);
    cout<<ans<<endl;
}