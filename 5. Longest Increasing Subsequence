#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int n;

// Longest Increasing Subsequence
int LongestIncreasingSubsequence(int x[]){
    int dp[n];
    fill(dp, dp+n, 1);
    for(int i=1;i<n;i++){
        int max_length = 1;
        for(int j=0;j<i;j++){
            if(x[j] < x[i]){
                if(dp[j] + 1 > max_length){
                    max_length=dp[j]+1;
                    dp[i] = max_length;
                }
            }
        }
        for(int i=0;i<n;i++)
            cout<<dp[i]<<" ";
        cout<<"\n";    
    }
    return *max_element(dp, dp+n);
}

int main(){
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    
    cout<<LongestIncreasingSubsequence(a);
    
    return 0;
}

TEST CASE:
9
10 22 9 33 21 50 41 60 80
