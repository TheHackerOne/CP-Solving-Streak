

#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
using namespace std;
typedef pair<int, int> ppi;

int n,k;

void top_k_frequent_elements(int x[]){
    unordered_map<int, int> umap;
    // element, count
    priority_queue<ppi, vector<ppi>, greater<ppi>> minheap;
    // count, element
    for(int i=0;i<n;i++)
        umap[x[i]]++;
    for(auto it=umap.begin();it!=umap.end();it++){
        minheap.push({it->second, it->first});
        if(minheap.size() > k)
            minheap.pop();
    }
    while(!minheap.empty()){
        cout<<minheap.top().second<<"\n";
        minheap.pop();
    }
}


int main(){
    cin>>n>>k;
    int a[n];
    for(int i=0;i<n;i++)
        cin>>a[i];
    
    top_k_frequent_elements(a);
    
    return 0;
}

TEST CASE:
8 2
3 1 4 4 5 2 6 1
