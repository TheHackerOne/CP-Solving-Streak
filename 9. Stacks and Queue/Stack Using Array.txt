#include <iostream>
#include <bits/stdc++.h>
using namespace std;

template <typename T>
class StackUsingArray{
    T *data;
    int nextIndex;
    int capacity;
    public:
    StackUsingArray(){
        data = new T[4];
        nextIndex = 0;
        capacity = 4;
    }

    int cap(){
        return capacity;
    }

    int size(){
        return nextIndex;
    }

    bool isEmpty(){
        return nextIndex == 0;   
    }

    void push(T data){
        if(nextIndex == capacity){
            T *newData = new T[2*capacity];
            for(int i=0;i<capacity;i++){
                newData[i] = this -> data[i];
            }
            capacity *=2;
            delete [] this -> data;
            this -> data = newData;
        }
        this -> data[nextIndex] = data;
        nextIndex++;
    }

    T pop(){
        if(nextIndex == 0){
            cout<<"Stack is empty";
            return 0;
        }
        nextIndex--;
        return data[nextIndex];
    }

    T top(){
        if(nextIndex == 0){
            cout<<"Stack is empty";
            return 0;
        }
        return this -> data[nextIndex-1];
    }

};

int main() {
    StackUsingArray<int> s;
    s.push(100);
    s.push(101);
    s.push(102);
    s.push(103);
    cout<<s.size()<<endl;
    cout<<s.cap()<<endl;
    s.push(105);
    cout<<s.size()<<endl;
    cout<<s.cap()<<endl;

    cout<<s.top()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.top()<<endl;

    return 0;
}
